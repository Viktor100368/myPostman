{
	"info": {
		"_postman_id": "3c95f511-5e88-45c3-9aa5-5fc6ba728f8b",
		"name": "HW2_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20766705"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" let jsonData = pm.response.json();\r",
							" //let personData = [\"vik\",\"45\",\"3000\"];\r",
							" \r",
							" let req = request.data;\r",
							" let family= jsonData.family;\r",
							" let children =[jsonData.family.children[0],jsonData.family.children[1]];\r",
							" let sal_1_5=jsonData.family.u_salary_1_5_year;\r",
							" let name = req.name;\r",
							" let age = req.age;\r",
							" let salary = req.salary;\r",
							"pm.test(\"request.name person data\", function () {\r",
							"    pm.expect(req.name).to.eql(\"vik\");\r",
							"});\r",
							"pm.test(\"request.age person data\", function () {\r",
							"    pm.expect(req.age).to.eql(\"45\");\r",
							"});\r",
							"pm.test(\"request.salary person data\", function () {\r",
							"    pm.expect(req.salary).to.eql(\"3000\");\r",
							"});\r",
							"pm.test(\"response.name equals request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"response.age equals request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"pm.test(\"response.salary equals request\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"checkout u_salary_1_5_year\", function () {\r",
							"    pm.expect(sal_1_5).to.eql(req.salary*4);\r",
							"});\r",
							"console.log(\"family  \",family);\r",
							" console.log(\"salary  \",salary);\r",
							"console.log(\"age  \",age);\r",
							" console.log(\"u_salary_1_5_year  \",sal_1_5);\r",
							"console.log(children[0]);\r",
							"console.log(children[1]);\r",
							"console.log(\"name  \",name);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "vik",
							"type": "text"
						},
						{
							"key": "age",
							"value": "45",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"contentType": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"  let jsonData = pm.response.json();\r",
							"  \r",
							"  let family=jsonData.family;\r",
							"  let children = [jsonData.family.children[0], jsonData.family.children[1]];\r",
							"  let pets = jsonData.family.pets;\r",
							"  let cat = jsonData.family.pets.cat;\r",
							"  let dog = jsonData.family.pets.dog;\r",
							"  let salary_1_5 = jsonData.family.u_salary_1_5_year;\r",
							"  let reqArr = (pm.request.url.getQueryString());\r",
							"\r",
							"  let personData ={};\r",
							"  let arr = reqArr.split('&');\r",
							"  //console.log(arr);\r",
							"  for(let i=0;i<arr.length;i++){\r",
							"    let arr1= arr[i].split('=');\r",
							"    Object.assign(personData,{[arr1[0]]:arr1[1]});\r",
							"  }\r",
							"\r",
							"pm.test(\"response.name equals request\", function () {\r",
							"  \r",
							"    pm.expect(jsonData.name).to.eql(personData.name);\r",
							"});\r",
							"pm.test(\"response.age equals request\", function () {\r",
							"  \r",
							"    pm.expect(jsonData.age).to.eql(personData.age);\r",
							"});\r",
							"pm.test(\"response.name equals request\", function () {\r",
							"  \r",
							"    pm.expect(jsonData.salary).to.eql(+personData.salary);\r",
							"});\r",
							"console.log(family);\r",
							"//console.log(dog);\r",
							"pm.test(\"field dog include name\", function () {\r",
							"    pm.expect(pm.response.text(dog)).to.include(\"name\");\r",
							"});\r",
							"pm.test(\"field dog include age\", function () {\r",
							"    pm.expect(pm.response.text(dog)).to.include(\"age\");\r",
							"});\r",
							"pm.test(\"dog age it is 4\", function () {\r",
							"    pm.expect(dog.age).to.eql(4);\r",
							"});\r",
							"pm.test(\"dog name is Luky\", function () {\r",
							"    pm.expect(dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"console.log(children[0][0]+\" \"+children[0][1] );\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=alex&age=30&salary=3500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "alex"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "3500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" let jsonData = pm.response.json();\r",
							" let resAge =jsonData.age;\r",
							" console.log(typeof resAge);\r",
							" let resName = jsonData.name;\r",
							" let resSalary = jsonData.salary;\r",
							" let req = pm.request.url.getQueryString();\r",
							" let personData={};\r",
							" let reqArr = req.split(\"&\");\r",
							" for(let i=0;i<reqArr.length;i++){\r",
							"     const key=reqArr[i].split('=')[0];\r",
							"     const value= reqArr[i].split(\"=\")[1];\r",
							"     Object.assign(personData,{[key]:value});\r",
							" }\r",
							" let requestName=personData.name;\r",
							" let requestAge = personData.age;\r",
							" let requestSalary = personData.salary;\r",
							"pm.test(\"name in response equals request\", function () {   \r",
							"    pm.expect(resName).to.eql(requestName);\r",
							"});\r",
							"pm.test(\"age in response equals request\", function () {   \r",
							"    pm.expect(resAge).to.eql(+requestAge);\r",
							"});\r",
							"console.log(requestSalary);\r",
							"console.log(resSalary);\r",
							"console.log(\"salary 0\",resSalary[0]);\r",
							"console.log(\"salary 1\",resSalary[1]);\r",
							"console.log(\"salary 2\",resSalary[2]);\r",
							"\r",
							"pm.test(\"salary = 3000\", function () { \r",
							"    pm.expect(resSalary[0]).to.eql(+requestSalary);\r",
							"});\r",
							"pm.test(\"salary = 6000\", function () { \r",
							"    pm.expect(resSalary[1]).to.eql([]+(requestSalary * 2));\r",
							"});\r",
							"pm.test(\"salary = 9000\", function () { \r",
							"    pm.expect(resSalary[2]).to.eql([] + (requestSalary * 3));\r",
							"});\r",
							"pm.environment.set('name',requestName);\r",
							"pm.environment.set('age',requestAge);\r",
							"pm.environment.set('salary',requestSalary);\r",
							"for(let key of resSalary){\r",
							"    console.log(key);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=alexandr&salary=3000&age=34",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "alexandr"
						},
						{
							"key": "salary",
							"value": "3000"
						},
						{
							"key": "age",
							"value": "34"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let req = request.data;\r",
							"let person = jsonData;\r",
							"console.log(\"person--\",person)\r",
							"let u_age= jsonData.person.u_age;\r",
							"let u_name = jsonData.person.u_name;\r",
							"for(let key of u_name){\r",
							"    console.log(key);\r",
							"}\r",
							"let u_salary_1_5_years = jsonData[\"person.u_salary_1.5_years\"];\r",
							"let after_1_5 = jsonData.qa_salary_after_1_5_year;\r",
							"let after_12_months = jsonData.qa_salary_after_12_months;\r",
							"let after_3_5_years = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"let after_6_months = jsonData.qa_salary_after_6_months;\r",
							"let start_salary = jsonData.start_qa_salary;\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"response has person\", function () {\r",
							"    pm.expect(jsonData).to.eql(person);\r",
							"});\r",
							"pm.test(\"start salary\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"salary_6\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"});\r",
							"pm.test(\"salary_12\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"});\r",
							"pm.test(\"salary_1.5\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(req.salary*3.3);\r",
							"});\r",
							"pm.test(\"salary_3.5\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(req.salary*3.8);\r",
							"});\r",
							"pm.test(\"u_name[1] = salary\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"u_age = age\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"pm.test(\"salary_5\", function () {\r",
							" pm.expect(jsonData.person.u_salary_5_years).to.eql(+req.salary*4.2);   \r",
							"});\r",
							"for(let key in jsonData.person){\r",
							"    console.log(key+\" : \"+ jsonData.person[key]);\r",
							"    if(typeof key === 'object'){\r",
							"        for(let temp in key){\r",
							"            console.log(temp+\" : \"+key[temp]);\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}